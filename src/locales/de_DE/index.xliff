<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
    <file source-language="en" datatype="plaintext" original="index">
        <body>
            <trans-unit id="1">
                <source>index.teaser.title</source>
                <target>
                    appserver
                </target>
            </trans-unit>
            <trans-unit id="2">
                <source>index.teaser.description</source>
                <target>
                    Multithreaded Application Server für PHP, geschrieben in PHP.
                </target>
            </trans-unit>
            <trans-unit id="3">
                <source>index.teaser.download</source>
                <target>
                    jetzt herunterladen
                </target>
            </trans-unit>
            <trans-unit id="4">
                <source>index.teaser.title</source>
                <target>
                    appserver
                </target>
            </trans-unit>
            <trans-unit id="5">
                <source>index.go-for-it.title</source>
                <target>
                    Go for it!
                </target>
            </trans-unit>
            <trans-unit id="6">
                <source>index.go-for-it.description</source>
                <target>
                    Ziel des Projekts ist die Entwicklung eines multithreaded Application Servers für PHP,
                    geschrieben in PHP. Geschrieben in PHP um möglichst vielen Entwicklern aus der PHP Gemeinde
                    die Mitarbeit zu ermöglichen und das Projekt durch die breite Unterstützung der PHP
                    Community als Standardlösung für Enterprise Anwendungen im PHP Umfeld zu etablieren.
                </target>
            </trans-unit>
            <trans-unit id="7">
                <source>index.highlight.title</source>
                <target>
                    Highlights
                </target>
            </trans-unit>
            <trans-unit id="8">
                <source>index.highlight.list.item-01</source>
                <target>
                    Doctrine als Standard Persistence Provider
                </target>
            </trans-unit>
            <trans-unit id="9">
                <source>index.highlight.list.item-02</source>
                <target>
                    Session Beans (Stateful, Stateless + Singleton
                </target>
            </trans-unit>
            <trans-unit id="10">
                <source>index.highlight.list.item-03</source>
                <target>
                    Message Beans
                </target>
            </trans-unit>
            <trans-unit id="11">
                <source>index.highlight.list.item-04</source>
                <target>
                    Timer Service (tbd)
                </target>
            </trans-unit>
            <trans-unit id="12">
                <source>index.highlight.list.item-05</source>
                <target>
                    Servlet Engine
                </target>
            </trans-unit>
            <trans-unit id="13">
                <source>index.highlight.list.item-06</source>
                <target>
                    Integrierte Message Queue
                </target>
            </trans-unit>
            <trans-unit id="14">
                <source>index.highlight.list.item-07</source>
                <target>
                    Einfache Skalierung
                </target>
            </trans-unit>
            <trans-unit id="15">
                <source>index.highlight.list.item-08</source>
                <target>
                    Webservices
                </target>
            </trans-unit>
            <trans-unit id="16">
                <source>index.requirements.title</source>
                <target>
                    Requirements
                </target>
            </trans-unit>
            <trans-unit id="17">
                <source>index.requirements.list.item-01</source>
                <target>
                    PHP5.3+ on x64 or x86
                </target>
            </trans-unit>
            <trans-unit id="18">
                <source>index.requirements.list.item-02</source>
                <target>
                    ZTS Enabled (Thread Safety)
                </target>
            </trans-unit>
            <trans-unit id="19">
                <source>index.requirements.list.item-03</source>
                <target>
                    Posix Threads Implementierung
                </target>
            </trans-unit>
            <trans-unit id="20">
                <source>index.requirements.list.item-04</source>
                <target>
                    Memcached (2.1+)
                </target>
            </trans-unit>
            <trans-unit id="21">
                <source>index.requirements.description</source>
                <target>
                    Die aktuelle Version wurde auf Mac OS X 10.7+ und Debian getestet. Aufgrund der verwendeten
                    Komponenten sollte der Betrieb allerdings auch auf anderen Plattformen möglich sein.
                </target>
            </trans-unit>
            <trans-unit id="22">
                <source>index.keep-it-simple.title</source>
                <target>
                    Keep it simple!
                </target>
            </trans-unit>
            <trans-unit id="23">
                <source>index.keep-it-simple.description</source>
                <target><![CDATA[
                    Die Implementierung einer Webanwendung sowie deren Betrieb im PHP Application Server
                    muss so einfach wie möglich sein. Hierzu werden zum Einen, wann immer möglich,
                    bereits bestehenden Komponenten als Standardlösung, so z. B. Doctrine, verwendet,
                    zum Anderen darf, durch das Paradigma Configuration by Exception, für den Betrieb einer
                    Anwendung nur ein Minimum an Konfiguration notwendig sein. So wird breits durch das
                    Standardverhalten der jeweiligen Kompenenten ein Großteil der Anwendungsfälle abgedeckt,
                    als Enwickler musst du somit nahezu keine deklarativen Angaben zur Konfiguration machen.
                    Um eine möglichst breite Community anzusprechen ist die Architektur des Application
                    Servers so aufgebaut, dass über Servlets eine möglichst große Anzahl an bereits
                    bestehenden Anwendungen/Frameworks einfach migriert werden kann. Zusätzlich wird die
                    Entwicklung von Webanwendungen auf Basis der relevanten PHP Frameworks durch die
                    Bereitstellung von Libraries unterstützt.
                ]]></target>
            </trans-unit>
            <trans-unit id="24">
                <source>index.technical-features.title</source>
                <target>
                    Technical Features
                </target>
            </trans-unit>
            <trans-unit id="25">
                <source>index.technical-features.list.item-01</source>
                <target>
                    Verwendung der phtreads Library von Joe Watkins (https://github.com/krakjoe/pthreads)
                </target>
            </trans-unit>
            <trans-unit id="26">
                <source>index.technical-features.list.item-02</source>
                <target>
                    Verwendung von DI &amp; AOP innerhalb der jeweiligen Container
                </target>
            </trans-unit>
            <trans-unit id="27">
                <source>index.technical-features.list.item-03</source>
                <target>
                    Einsatz von Annotations zur Konfiguration der Beans
                </target>
            </trans-unit>
            <trans-unit id="28">
                <source>index.technical-features.list.item-04</source>
                <target>
                    Configration by Exception (optional Verwendung von Deployment Descriptoren möglich)
                </target>
            </trans-unit>
        </body>
    </file>
</xliff>